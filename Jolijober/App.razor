@using Microsoft.AspNetCore.Components.Routing
@using Jolijober.Views.Shared;
@inject IJSRuntime JSRuntime;

<CascadingAuthenticationState>
    <Router AppAssembly="typeof(Program).Assembly">
        <Found Context="routeData">
            @if (routeData.PageType == typeof(Jolijober.Views.Pages.ShowJob))
            {
                <RouteView RouteData="@routeData" DefaultLayout="@typeof(ShowLayout)" />
            }
            else
            {
                <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                    <NotAuthorized>
                        @if (!context.User.Identity.IsAuthenticated)
                        {
                            <p>302</p>
                        }
                        else
                        {
                            <p>You are not authorized to access this resource.</p>
                        }
                    </NotAuthorized>
                </AuthorizeRouteView>
            }
        </Found>
        <NotFound>
            @*<LayoutView Layout="@typeof(MainLayout)">*@
            <RedirectToLogin />
            @*</LayoutView>*@
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code{
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
           await JSRuntime.InvokeVoidAsync("initscript");
    }
}
